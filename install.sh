#!/data/data/com.termux/files/usr/bin/bash

# --- –¶–≤–µ—Ç–∞ –∏ –°—Ç–∏–ª–∏ ---
C_RED='\033[0;31m'
C_GREEN='\033[0;32m'
C_YELLOW='\033[0;33m'
C_BLUE='\033[0;34m'
C_MAGENTA='\033[0;35m'
C_CYAN='\033[0;36m'
C_BOLD='\033[1m'
C_RESET='\033[0m'

# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –§—É–Ω–∫—Ü–∏–∏ ---
print_header() {
    echo -e "\n${C_BOLD}${C_MAGENTA}======================================================${C_RESET}"
    echo -e "${C_BOLD}${C_MAGENTA} $1 ${C_RESET}"
    echo -e "${C_BOLD}${C_MAGENTA}======================================================${C_RESET}"
}

print_info() {
    echo -e "${C_CYAN}INFO: $1${C_RESET}"
}

print_success() {
    echo -e "${C_GREEN}‚úÖ –£–°–ü–ï–•: $1${C_RESET}"
}

print_error() {
    echo -e "${C_RED}‚ùå –û–®–ò–ë–ö–ê: $1${C_RESET}" >&2
}

spinner() {
    local pid=$1
    local delay=0.1
    local spinstr='|/-\'
    while ps -p $pid > /dev/null; do
        local temp=${spinstr#?}
        printf " [%c]  " "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done
}

# --- –û—Å–Ω–æ–≤–Ω–æ–π –°–∫—Ä–∏–ø—Ç ---

clear
echo -e "${C_BOLD}${C_CYAN}"
cat << "EOF"
 ______________________________                __                 
\_   _____/\______   \_   ___ \  ____________/  |_  ____ ___  ___
 |    __)   |     ___/    \  \/ /  _ \_  __ \   __\/ __ \\  \/  /
 |     \    |    |   \     \___(  <_> )  | \/|  | \  ___/ >    < 
 \___  /    |____|    \______  /\____/|__|   |__|  \___  >__/\_ \
     \/                      \/                        \/      \/
EOF
echo -e "${C_RESET}"
echo -e "${C_BOLD}${C_YELLOW}        –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ FunPay Cortex –¥–ª—è Termux!${C_RESET}"
echo -e "${C_YELLOW}                  –ê–≤—Ç–æ—Ä—ã: @beedge, —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ @GPT-4${C_RESET}"
sleep 2

# –®–∞–≥ 1: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤
print_header "‚öôÔ∏è –®–∞–≥ 1/5: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤ Termux"
print_info "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è..."
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ dpkg
pkg update -y -o Dpkg::Options::="--force-confold"
pkg upgrade -y -o Dpkg::Options::="--force-confold"
print_success "–ü–∞–∫–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã."
sleep 1

# –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
print_header "üì¶ –®–∞–≥ 2/5: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
dependencies="python git clang libjpeg-turbo libxml2 libxslt make pkg-config rust openssl"
for dep in $dependencies; do
    print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ ${dep}..."
    (pkg install ${dep} -y -o Dpkg::Options::="--force-confold" > /dev/null 2>&1) &
    spinner $!
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if pkg -s ${dep} | grep -q "installed"; then
        print_success "${dep} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    else
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ${dep}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –∑–∞–Ω–æ–≤–æ."
        exit 1
    fi
done
print_success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."
sleep 1

# –®–∞–≥ 3: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
print_header "üì• –®–∞–≥ 3/5: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è FunPay Cortex"
if [ -d "FunPayCortex" ]; then
    print_info "–ü–∞–ø–∫–∞ FunPayCortex —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é..."
    rm -rf FunPayCortex
fi
(git clone https://github.com/Beedgee/FunPayCortex.git > /dev/null 2>&1) &
spinner $!
if [ -d "FunPayCortex" ]; then
    print_success "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É—Å–ø–µ—à–Ω–æ —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω."
    cd FunPayCortex
else
    print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ."
    exit 1
fi
sleep 1

# –®–∞–≥ 4: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è Python
print_header "üêç –®–∞–≥ 4/5: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è Python"
(python3 -m venv venv > /dev/null 2>&1) &
spinner $!
if [ -d "venv" ]; then
    print_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ."
else
    print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ."
    exit 1
fi
sleep 1

# –®–∞–≥ 5: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python-–±–∏–±–ª–∏–æ—Ç–µ–∫
print_header "üß© –®–∞–≥ 5/5: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python-–±–∏–±–ª–∏–æ—Ç–µ–∫ (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 10-25 –º–∏–Ω—É—Ç)"
print_info "–≠—Ç–æ —Å–∞–º—ã–π –¥–æ–ª–≥–∏–π —ç—Ç–∞–ø, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–π—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å..."
source venv/bin/activate
# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –ø–∞–∫–µ—Ç–æ–≤ –≤ Termux
export LDFLAGS="-L/data/data/com.termux/files/usr/lib"
export CFLAGS="-I/data/data/com.termux/files/usr/include"
(pip install --upgrade pip > /dev/null 2>&1 && pip install -r requirements.txt > /dev/null 2>&1) &
spinner $!
deactivate
print_success "–í—Å–µ Python-–±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."
sleep 1

# --- –§–∏–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ ---
print_header "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! üéâ"
echo -e "${C_BOLD}${C_GREEN}FunPay Cortex –≥–æ—Ç–æ–≤ –∫ –ø–µ—Ä–≤–æ–º—É –∑–∞–ø—É—Å–∫—É.${C_RESET}"
echo -e "\n${C_YELLOW}–ß—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:${C_RESET}"
echo -e "1. ${C_CYAN}cd FunPayCortex${C_RESET}"
echo -e "2. ${C_CYAN}source venv/bin/activate${C_RESET}"
echo -e "3. ${C_CYAN}python main.py${C_RESET}"
echo -e "\n${C_YELLOW}–ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤–≤–µ—Å—Ç–∏ –≤–∞—à ${C_BOLD}golden_key${C_RESET}${C_YELLOW} –∏ —Ç–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞.${C_RESET}"
echo -e "\n${C_BOLD}${C_MAGENTA}–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ FunPay Cortex! –£–¥–∞—á–∏ –≤ —Ç–æ—Ä–≥–æ–≤–ª–µ! üöÄ${C_RESET}"
